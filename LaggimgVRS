local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local UserInputService = game:GetService("UserInputService")

-- إنشاء الـ ScreenGui والزر
local ScreenGui = Instance.new("ScreenGui")
local Button = Instance.new("TextButton")

ScreenGui.Parent = game.CoreGui

-- تصميم الزر
Button.Size = UDim2.new(0, 200, 0, 50)
Button.Position = UDim2.new(0.5, -100, 0.1, 0)
Button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Button.Font = Enum.Font.SourceSansBold
Button.TextScaled = true
Button.Text = "VRS - إزالة الإكسسوارات"
Button.BorderSizePixel = 2
Button.BorderColor3 = Color3.fromRGB(255, 255, 0)
Button.Parent = ScreenGui

-- متغيرات التحكم
local isRunning = false
local connection
local playerAccessories = {}

-- دالة لحفظ الإكسسوارات
local function saveAccessories(player)
    playerAccessories[player] = {}
    if player.Character then
        for _, item in ipairs(player.Character:GetChildren()) do
            if item:IsA("Accessory") or item:IsA("Shirt") or item:IsA("Pants") or item:IsA("ShirtGraphic") then
                table.insert(playerAccessories[player], item:Clone())
            end
        end
    end
end

-- دالة لحذف الإكسسوارات
local function removeAccessories(player)
    if player.Character then
        for _, item in ipairs(player.Character:GetChildren()) do
            if item:IsA("Accessory") or item:IsA("Shirt") or item:IsA("Pants") or item:IsA("ShirtGraphic") then
                item:Destroy()
            end
        end
    end
end

-- دالة لاسترجاع الإكسسوارات
local function restoreAccessories(player)
    if playerAccessories[player] and player.Character then
        for _, accessory in ipairs(playerAccessories[player]) do
            accessory:Clone().Parent = player.Character
        end
    end
end

-- دالة إرسال إشعار
local function sendNotification(title, text, duration)
    StarterGui:SetCore("SendNotification", {
        Title = title,
        Text = text,
        Duration = duration or 5
    })
end

-- تشغيل/إيقاف إزالة الإكسسوارات
local function toggleAccessoryRemoval()
    isRunning = not isRunning

    if isRunning then
        Button.Text = "VRS - إيقاف إزالة الإكسسوارات"

        -- إرسال إشعار
        sendNotification("VRS", "أهلا بك بسكربت فيروس", 5)

        -- حفظ وحذف الإكسسوارات
        for _, player in ipairs(Players:GetPlayers()) do
            saveAccessories(player)
            removeAccessories(player)
        end

        -- مراقبة دخول اللاعبين الجدد أو إعادة ظهور الشخصية
        connection = Players.PlayerAdded:Connect(function(player)
            player.CharacterAdded:Connect(function()
                saveAccessories(player)
                removeAccessories(player)
            end)
        end)

        for _, player in ipairs(Players:GetPlayers()) do
            if player.Character then
                removeAccessories(player)
            end
            player.CharacterAdded:Connect(function()
                saveAccessories(player)
                removeAccessories(player)
            end)
        end
    else
        Button.Text = "VRS - تشغيل إزالة الإكسسوارات"

        -- استرجاع الإكسسوارات
        for _, player in ipairs(Players:GetPlayers()) do
            restoreAccessories(player)
        end

        -- قطع الاتصال
        if connection then
            connection:Disconnect()
        end

        -- تنظيف البيانات
        playerAccessories = {}
    end
end

-- تشغيل/إيقاف عند الضغط على الزر
Button.MouseButton1Click:Connect(toggleAccessoryRemoval)

-- نظام السحب (Draggable) للأجهزة اللمسية
local dragging = false
local dragInput
local dragStart
local startPos

local function updateInput(input)
    local delta = input.Position - dragStart
    Button.Position = UDim2.new(
        startPos.X.Scale,
        startPos.X.Offset + delta.X,
        startPos.Y.Scale,
        startPos.Y.Offset + delta.Y
    )
end

Button.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = Button.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

Button.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        updateInput(input)
    end
end)
